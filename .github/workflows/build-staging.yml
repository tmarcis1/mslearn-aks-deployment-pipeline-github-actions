# This is a basic workflow to help you get started with Actions

name: Build and push the lastest build to staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
              
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        uses: docker/login-action@v2.1.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          # Specifies whether the given registry is ECR (auto, true or false)
          # ecr: # optional, default is auto
          # Log out from the Docker registry at the end of a job
          # logout: # optional, default is true
          
      - name: Build and push staging images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        uses: docker/build-push-action@v4.0.0
        with:
          # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
          # add-hosts: # optional
          # List of extra privileged entitlement (e.g., network.host,security.insecure)
          # allow: # optional
          # List of attestation parameters (e.g., type=sbom,generator=image)
          # attests: # optional
          # List of build-time variables
          # build-args: # optional
          # List of additional build contexts (e.g., name=path)
          # build-contexts: # optional
          # Builder instance
          # builder: # optional
          # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
          # cache-from: # optional
          # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
          # cache-to: # optional
          # Optional parent cgroup for the container used in the build
          # cgroup-parent: # optional
          # Build's context is the set of files located in the specified PATH or URL
          context: .
          # Path to the Dockerfile
          # file: # optional
          # List of metadata for an image
          # labels: # optional
          # Load is a shorthand for --output=type=docker
          # load: # optional, default is false
          # Set the networking mode for the RUN instructions during build
          # network: # optional
          # Do not use cache when building the image
          # no-cache: # optional, default is false
          # Do not cache specified stages
          # no-cache-filters: # optional
          # List of output destinations (format: type=local,dest=path)
          # outputs: # optional
          # List of target platforms for build
          # platforms: # optional
          # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
          # provenance: # optional
          # Always attempt to pull all referenced images
          # pull: # optional, default is false
          # Push is a shorthand for --output=type=registry
          push: true
          # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
          # sbom: # optional
          # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
          # secrets: # optional
          # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
          # secret-files: # optional
          # Size of /dev/shm (e.g., 2g)
          # shm-size: # optional
          # List of SSH agent socket or keys to expose to the build
          # ssh: # optional
          # List of tags
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest
          # Sets the target stage to build
          # target: # optional
          # Ulimit options (e.g., nofile=1024:1024)
          # ulimit: # optional
          # GitHub Token used to authenticate against a repository for Git context
          # github-token: # optional, default is ${{ github.token }}
